//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.TweetSampleData
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class TweetSampleData { }
#else

	public class TweetSampleData : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public TweetSampleData()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/Ocell;component/SampleData/TweetSampleData/TweetSampleData.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private string _ScreenName = string.Empty;

		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}

			set
			{
				if (this._ScreenName != value)
				{
					this._ScreenName = value;
					this.OnPropertyChanged("ScreenName");
				}
			}
		}

		private string _FullName = string.Empty;

		public string FullName
		{
			get
			{
				return this._FullName;
			}

			set
			{
				if (this._FullName != value)
				{
					this._FullName = value;
					this.OnPropertyChanged("FullName");
				}
			}
		}

		private System.Windows.Media.ImageSource _Avatar = null;

		public System.Windows.Media.ImageSource Avatar
		{
			get
			{
				return this._Avatar;
			}

			set
			{
				if (this._Avatar != value)
				{
					this._Avatar = value;
					this.OnPropertyChanged("Avatar");
				}
			}
		}

		private string _Text = string.Empty;

		public string Text
		{
			get
			{
				return this._Text;
			}

			set
			{
				if (this._Text != value)
				{
					this._Text = value;
					this.OnPropertyChanged("Text");
				}
			}
		}

		private string _CreatedDate = string.Empty;

		public string CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}

			set
			{
				if (this._CreatedDate != value)
				{
					this._CreatedDate = value;
					this.OnPropertyChanged("CreatedDate");
				}
			}
		}

		private string _Source = string.Empty;

		public string Source
		{
			get
			{
				return this._Source;
			}

			set
			{
				if (this._Source != value)
				{
					this._Source = value;
					this.OnPropertyChanged("Source");
				}
			}
		}

		private bool _HasImage = false;

		public bool HasImage
		{
			get
			{
				return this._HasImage;
			}

			set
			{
				if (this._HasImage != value)
				{
					this._HasImage = value;
					this.OnPropertyChanged("HasImage");
				}
			}
		}

		private UsersWhoRetweeted _UsersWhoRetweeted = new UsersWhoRetweeted();

		public UsersWhoRetweeted UsersWhoRetweeted
		{
			get
			{
				return this._UsersWhoRetweeted;
			}
		}

		private bool _HasRetweets = false;

		public bool HasRetweets
		{
			get
			{
				return this._HasRetweets;
			}

			set
			{
				if (this._HasRetweets != value)
				{
					this._HasRetweets = value;
					this.OnPropertyChanged("HasRetweets");
				}
			}
		}

		private bool _IsMuting = false;

		public bool IsMuting
		{
			get
			{
				return this._IsMuting;
			}

			set
			{
				if (this._IsMuting != value)
				{
					this._IsMuting = value;
					this.OnPropertyChanged("IsMuting");
				}
			}
		}
	}

	public class UsersWhoRetweetedItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private User _User = new User();

		public User User
		{
			get
			{
				return this._User;
			}

			set
			{
				if (this._User != value)
				{
					this._User = value;
					this.OnPropertyChanged("User");
				}
			}
		}
	}

	public class UsersWhoRetweeted : System.Collections.ObjectModel.ObservableCollection<UsersWhoRetweetedItem>
	{ 
	}

	public class User : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private System.Windows.Media.ImageSource _ProfileImageUrl = null;

		public System.Windows.Media.ImageSource ProfileImageUrl
		{
			get
			{
				return this._ProfileImageUrl;
			}

			set
			{
				if (this._ProfileImageUrl != value)
				{
					this._ProfileImageUrl = value;
					this.OnPropertyChanged("ProfileImageUrl");
				}
			}
		}
	}
#endif
}
